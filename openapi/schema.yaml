openapi: 3.0.0
info:
  title: Chatter REST API Docs
  version: 1.0.0
  description: This is a simple CRUD API application made with Express and documented with Swagger
tags: 
  - name: authentication
  - name: settings
  - name: chat
paths:
  /health:
    get:
      summary: Health check
      responses:
        "200":
          description: Successful health check
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponse200"
  /register:
    post:
      tags: 
        - authentication
      summary: Register a new User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: mike@gmail.com
                username:
                  type: string
                  example: mike11
                password:
                  type: string
                  example: password123
                  minLength: 5
              required:
                - email
                - username
                - password
      responses:
        "201":
          description: Successfully created User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponse201"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"
  /login:
    post:
      tags: 
        - authentication
      summary: Login as a User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: mike11
                password:
                  type: string
                  example: password123
              required:
                - username
                - password
      responses:
        "200":
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponse200"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"

  /authed/avatar:
    get:
      tags: 
        - settings
      summary: Get default avatars and the user's current avatar
      security:
        - jwtAuth: []
      responses:
        "200":
          description: Default avatars and current avatar
          content:
            application/json:
              schema:
                type: object
                properties:
                  defaultAvatars:
                    type: array
                    items: string
                    example: ['default-avatar-1', 'default-avatar-2']
                  currentAvatar:
                    type: string
                    example: 'default-avatar-1'
                required:
                  - defaultAvatars
                  - currentAvatar
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"   

  /authed/setAvatar:
    post:
      tags: 
        - settings
      summary: Set an avatar for a User
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  example: avatar1
              required:
                - avatar
      responses:
        "200":
          description: Successfully changed avatar
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponse200"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse404"
    
  /authed/chatheads:
    get:
      tags: 
        - chat
      summary: Get chat heads for a given user
      security:
        - jwtAuth: []
      responses:
        "201":
          description: Successfully created message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponse200"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"
    
  /authed/readThread/{threadId}:
    get:
      tags: 
        - chat
      summary: Mark a specified thread as read
      security:
        - jwtAuth: []
      parameters:
        - name: threadId
          in: path
          required: true
          description: ID of the thread to be marked as read
          schema:
            type: string
      responses:
        "200":
          description: Successfully read thread
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponse200"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"
  
  /authed/userHeads:
    get:
      tags: 
        - chat
      summary: Get user heads for a given user
      security:
        - jwtAuth: []
      responses:
        "200":
          description: Successfully got user heads
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponse200"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"
                
  /authed/postMessage:
    post:
      tags: 
        - chat
      summary: Send a message to a specified chat thread
      security:
        - jwtAuth: []
      responses:
        "200":
          description: Successfully got user heads
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponse200"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse400"      
      
components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SuccessfulResponse200:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: Successful request
      required:
        - error
        
    SuccessfulResponse201:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: Created successfully
      required:
        - error
        
    InvalidResponse400:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: Incorrectly formatted request
      required:
        - error
        
    InvalidResponse401:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: Specified content was not found
      required:
        - error
        
    InvalidResponse404:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: Could not find specified resource
      required:
        - error
